// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package socket

import (
	"github.com/eNViDAT0001/Thesis/Backend/delivery/websocket/chat"
	"github.com/eNViDAT0001/Thesis/Backend/delivery/websocket/notify"
	storage2 "github.com/eNViDAT0001/Thesis/Backend/internal/chat/domain/chat/storage"
	"github.com/eNViDAT0001/Thesis/Backend/internal/chat/domain/chat/usecase"
	storage3 "github.com/eNViDAT0001/Thesis/Backend/internal/notify/domain/notification/storage"
	usecase2 "github.com/eNViDAT0001/Thesis/Backend/internal/notify/domain/notification/usecase"
	"github.com/eNViDAT0001/Thesis/Backend/internal/user/domain/user/storage"
)

// Injectors from socket_wire.go:

func initSocketCollection() *WebSocketCollection {
	userStorage := storage.NewUserStorage()
	chatStorage := storage2.NewChatStorage(userStorage)
	useCase := usecase.NewChatUseCase(chatStorage)
	webSocketHandler := chat.NewSocketChatHandler(useCase)
	notificationStorage := storage3.NewNotificationStorage()
	notificationUseCase := usecase2.NewNotificationUseCase(notificationStorage)
	notificationWebSocketHandler := notify.NewSocketNotificationHandler(notificationUseCase)
	webSocketCollection := NewSocketCollection(webSocketHandler, notificationWebSocketHandler)
	return webSocketCollection
}
